
apiVersion: v1
kind: Namespace
metadata:
  name: kubemq
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubemq-operator
  namespace: kubemq
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - kubemq-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - core.k8s.kubemq.io
  resources:
  - '*'
  - kubemqclusters
  - kubemqdashboards
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubemq-operator
  namespace: kubemq
subjects:
- kind: ServiceAccount
  name: kubemq-operator
roleRef:
  kind: Role
  name: kubemq-operator
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubemq-operator
  namespace: kubemq
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kubemqclusters.core.k8s.kubemq.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.version
    name: Version
    type: string
  - JSONPath: .status.status
    name: Status
    type: string
  - JSONPath: .status.replicas
    name: Replicas
    type: string
  - JSONPath: .status.ready
    name: Ready
    type: string
  - JSONPath: .status.grpc
    name: gRPC
    type: string
  - JSONPath: .status.rest
    name: Rest
    type: string
  - JSONPath: .status.api
    name: API
    type: string
  - JSONPath: .status.license_type
    name: License-type
    type: string
  - JSONPath: .status.license_to
    name: License-To
    type: string
  - JSONPath: .status.license_expire
    name: License-Expire
    type: string
  group: core.k8s.kubemq.io
  names:
    kind: KubemqCluster
    listKind: KubemqClusterList
    plural: kubemqclusters
    singular: kubemqcluster
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      description: KubemqCluster is the Schema for the kubemqclusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            api:
              properties:
                disabled:
                  type: boolean
                expose:
                  pattern: (ClusterIP|NodePort|LoadBalancer)
                  type: string
                nodePort:
                  format: int32
                  type: integer
                port:
                  format: int32
                  type: integer
              type: object
            authentication:
              properties:
                key:
                  type: string
                type:
                  type: string
              type: object
            authorization:
              properties:
                autoReload:
                  format: int32
                  type: integer
                policy:
                  type: string
                url:
                  type: string
              type: object
            configData:
              type: string
            gateways:
              properties:
                ca:
                  type: string
                cert:
                  type: string
                key:
                  type: string
                port:
                  format: int32
                  type: integer
                remotes:
                  items:
                    type: string
                  type: array
              type: object
            grpc:
              properties:
                bodyLimit:
                  format: int32
                  type: integer
                bufferSize:
                  format: int32
                  type: integer
                disabled:
                  type: boolean
                expose:
                  pattern: (ClusterIP|NodePort|LoadBalancer)
                  type: string
                nodePort:
                  format: int32
                  type: integer
                port:
                  format: int32
                  type: integer
              type: object
            health:
              properties:
                enabled:
                  type: boolean
                failureThreshold:
                  format: int32
                  type: integer
                initialDelaySeconds:
                  format: int32
                  type: integer
                periodSeconds:
                  format: int32
                  type: integer
                successThreshold:
                  format: int32
                  type: integer
                timeoutSeconds:
                  format: int32
                  type: integer
              type: object
            image:
              properties:
                image:
                  type: string
                pullPolicy:
                  pattern: (IfNotPresent|Always|Never)
                  type: string
              type: object
            license:
              type: string
            log:
              properties:
                file:
                  type: string
                level:
                  format: int32
                  type: integer
              type: object
            nodeSelectors:
              properties:
                keys:
                  additionalProperties:
                    type: string
                  type: object
              type: object
            notification:
              properties:
                enabled:
                  type: boolean
                log:
                  type: boolean
                prefix:
                  type: string
              type: object
            queue:
              properties:
                defaultVisibilitySeconds:
                  format: int32
                  minimum: 0
                  type: integer
                defaultWaitTimeoutSeconds:
                  format: int32
                  minimum: 0
                  type: integer
                maxDelaySeconds:
                  format: int32
                  minimum: 0
                  type: integer
                maxExpirationSeconds:
                  format: int32
                  minimum: 0
                  type: integer
                maxReQueues:
                  format: int32
                  minimum: 0
                  type: integer
                maxReceiveMessagesRequest:
                  format: int32
                  minimum: 0
                  type: integer
                maxVisibilitySeconds:
                  format: int32
                  minimum: 0
                  type: integer
                maxWaitTimeoutSeconds:
                  format: int32
                  minimum: 0
                  type: integer
              type: object
            replicas:
              format: int32
              minimum: 0
              type: integer
            resources:
              properties:
                limitsCpu:
                  type: string
                limitsMemory:
                  type: string
                requestsCpu:
                  type: string
                requestsMemory:
                  type: string
              type: object
            rest:
              properties:
                bodyLimit:
                  format: int32
                  type: integer
                bufferSize:
                  format: int32
                  type: integer
                disabled:
                  type: boolean
                expose:
                  pattern: (ClusterIP|NodePort|LoadBalancer)
                  type: string
                nodePort:
                  format: int32
                  type: integer
                port:
                  format: int32
                  type: integer
              type: object
            routing:
              properties:
                autoReload:
                  format: int32
                  type: integer
                data:
                  type: string
                url:
                  type: string
              type: object
            store:
              properties:
                clean:
                  type: boolean
                maxChannelSize:
                  format: int32
                  minimum: 0
                  type: integer
                maxChannels:
                  format: int32
                  minimum: 0
                  type: integer
                maxMessages:
                  format: int32
                  minimum: 0
                  type: integer
                maxSubscribers:
                  format: int32
                  minimum: 0
                  type: integer
                messagesRetentionMinutes:
                  format: int32
                  minimum: 0
                  type: integer
                path:
                  type: string
                purgeInactiveMinutes:
                  format: int32
                  minimum: 0
                  type: integer
              type: object
            tls:
              properties:
                ca:
                  type: string
                cert:
                  type: string
                key:
                  type: string
              type: object
            volume:
              properties:
                size:
                  type: string
                storageClass:
                  type: string
              type: object
          type: object
        status:
          description: KubemqClusterStatus defines the observed state of KubemqCluster
          properties:
            api:
              type: string
            grpc:
              type: string
            license_expire:
              type: string
            license_to:
              type: string
            license_type:
              type: string
            ready:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            rest:
              type: string
            selector:
              type: string
            status:
              type: string
            version:
              type: string
          required:
          - api
          - grpc
          - license_expire
          - license_to
          - license_type
          - ready
          - replicas
          - rest
          - selector
          - status
          - version
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kubemqdashboards.core.k8s.kubemq.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.status
    name: Status
    type: string
  - JSONPath: .status.address
    name: Address
    type: string
  - JSONPath: .status.prometheus_version
    name: Prometheus-Version
    type: string
  - JSONPath: .status.grafana_version
    name: Grafana-Version
    type: string
  group: core.k8s.kubemq.io
  names:
    kind: KubemqDashboard
    listKind: KubemqDashboardList
    plural: kubemqdashboards
    singular: kubemqdashboard
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KubemqDashboard is the Schema for the kubemqdashboards API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KubemqDashboardSpec defines the desired state of KubemqDashboard
          properties:
            grafana:
              properties:
                dashboardUrl:
                  type: string
                image:
                  type: string
              type: object
            port:
              format: int32
              type: integer
            prometheus:
              properties:
                image:
                  type: string
                nodePort:
                  format: int32
                  type: integer
              type: object
          type: object
        status:
          description: KubemqDashboardStatus defines the observed state of KubemqDashboard
          properties:
            address:
              type: string
            grafana_version:
              type: string
            prometheus_version:
              type: string
            status:
              type: string
          required:
          - address
          - grafana_version
          - prometheus_version
          - status
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubemq-operator
  namespace: kubemq
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kubemq-operator
  template:
    metadata:
      labels:
        name: kubemq-operator
    spec:
      serviceAccountName: kubemq-operator
      containers:
        - name: kubemq-operator
          image: docker.io/kubemq/kubemq-operator:latest
          command:
          - kubemq-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "kubemq-operator"
            - name: RELATED_IMAGE_KUBEMQ_CLUSTER
              value: docker.io/kubemq/kubemq:latest
            - name: RELATED_IMAGE_PROMETHEUS
              value: prom/prometheus:latest
            - name: RELATED_IMAGE_GRAFANA
              value: grafana/grafana:latest
            - name: KUBEMQ_VIEW_DASHBOARD_SOURCE
              value: https://raw.githubusercontent.com/kubemq-io/kubemq-dashboard/master/dashboard.json
            - name: KUBEMQ_LICENSE_MODE
              value: COMMUNITY

---

apiVersion: core.k8s.kubemq.io/v1alpha1
kind: KubemqCluster
metadata:
  name: kubemq-cluster
  namespace: kubemq
spec:
  image:
    image: docker.io/kubemq/kubemq:latest
    pullPolicy: Always
  replicas: 3
  grpc:
    expose: LoadBalancer
  rest:
    expose: LoadBalancer
  api:
    expose: LoadBalancer


---

apiVersion: core.k8s.kubemq.io/v1alpha1
kind: KubemqDashboard             
metadata:                         
  name: kubemq-dashboard          
  namespace: kubemq               
spec:                             
  port: 32000                     
